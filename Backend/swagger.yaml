swagger: "2.0"
info:
  title: ArgentBank API documentation
    description: |
    API for ArgentBank.

    #### Features
    - **User Authentication** : Sign-in with email and password.
    - **User Profile Management** : Seeing the profile and editing its name.
    - **Transaction Management**: Seeing all the user's current month transactions, seeing the details of a specific transaction and editing details (category, notes).
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/{userId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User transactions API
      description: API for fetching user transactions
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
          description: The ID of the user
        - in: query
          name: accountId
          type: string
          required: true
          description: The ID of the account to filter transactions
      responses:
        "200":
          description: User transactions retrieved successfully
          schema:
            $ref: "#/definitions/TransactionsApiResponse"
        "400":
          description: Bad request
        "500":
          description: Internal Server Error
  /user/{userId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User transaction details API
      description: Fetching specific user transaction details
      parameters:
        - in: path
          name: userId
          required: true
          type: string
          description: The ID of the user
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction to retrieve
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details
          schema:
            $ref: "#/definitions/TransactionApiResponse"
        "400":
          description: Bad request
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User transaction details API (update)
      description: Update the details of an existing user transaction
      parameters:
        - in: path
          name: userId
          required: true
          type: string
          description: The ID of the user
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction to update
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: "#/definitions/UserTransactionEdit"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
        "400":
          description: Bad request
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionsApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          type: object
          properties:
            transaction_id:
              type: string
            date:
              type: string
              format: date
            description:
              type: string
            amount:
              type: number
              format: float
            balance:
              type: number
              format: float
  TransactionApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transaction_id:
            type: string
          date:
            type: string
            format: date
          description:
            type: string
          amount:
            type: number
            format: float
          balance:
            type: number
            format: float
          transactionType:
            type: string
          category:
            type: string
            enum:
              - Food
              - Entertainment
              - Utilities
              - Travel
              - Other
          notes:
            type: string

  UserTransactionEdit:
    type: object
    properties:
      category:
        type: string
        enum:
          - Food
          - Entertainment
          - Utilities
          - Travel
          - Other
      notes:
        type: string
